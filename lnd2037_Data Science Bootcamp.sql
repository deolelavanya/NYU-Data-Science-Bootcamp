
-- Create database and use it
CREATE DATABASE IF NOT EXISTS bootcamp_db;
USE bootcamp_db;

-- Create SALES table
CREATE TABLE SALES (
    Date DATE,
    Order_id INT,
    Item_id INT,
    Customer_id INT,
    Quantity INT,
    Revenue DECIMAL(10,2)
);

-- Create ITEMS table
CREATE TABLE ITEMS (
    Item_id INT,
    Item_name VARCHAR(100),
    Price DECIMAL(10,2),
    Department VARCHAR(100)
);

-- Create CUSTOMERS table
CREATE TABLE CUSTOMERS (
    Customer_id INT,
    First_name VARCHAR(100),
    Last_name VARCHAR(100),
    Address VARCHAR(255)
);

-- Insert data into SALES
INSERT INTO SALES VALUES
('2022-06-15', 1, 1, 1, 2, 1000),
('2022-08-01', 2, 4, 2, 20, 800),
('2022-09-10', 3, 5, 3, 250, 500),
('2022-11-20', 4, 6, 4, 10, 300),
('2023-01-10', 5, 2, 2, 1, 100),
('2023-01-25', 6, 4, 4, 5, 200),
('2023-02-05', 7, 1, 4, 1, 500),
('2023-02-05', 7, 2, 4, 2, 200),
('2023-02-05', 7, 3, 4, 5, 100),
('2023-02-05', 7, 4, 4, 3, 120),
('2023-02-05', 7, 6, 4, 5, 150),
('2023-03-18', 8, 1, 1, 1, 500),
('2023-03-18', 9, 3, 3, 2, 40);

-- Insert data into ITEMS
INSERT INTO ITEMS VALUES
(1, 'Laptop', 500, 'Electronics'),
(2, 'Headphones', 100, 'Electronics'),
(3, 'T-Shirt', 20, 'Clothing'),
(4, 'Jeans', 40, 'Clothing'),
(5, 'Apples', 2, 'Grocery'),
(6, 'Board Game', 30, 'Toys');

-- Insert data into CUSTOMERS
INSERT INTO CUSTOMERS VALUES
(1, 'John', 'Doe', '123 Maple St, Springfield'),
(2, 'Jane', 'Smith', '456 Oak Ave, Springfield'),
(3, 'Bob', 'Brown', '789 Pine Rd, Springfield'),
(4, 'Alice', 'Johnson', '321 Elm St, Springfield');


-- 1. Total number of orders completed on 18th March 2023
SELECT COUNT(DISTINCT Order_id) AS total_orders
FROM SALES
WHERE Date = '2023-03-18';

-- 2. Total number of orders on 18th March 2023 by 'John Doe'
SELECT COUNT(DISTINCT S.Order_id) AS john_doe_orders
FROM SALES S
JOIN CUSTOMERS C ON S.Customer_id = C.Customer_id
WHERE S.Date = '2023-03-18'
  AND C.First_name = 'John'
  AND C.Last_name = 'Doe';

-- 3. Total customers who purchased in January 2023 and avg spend per customer
SELECT 
    COUNT(DISTINCT Customer_id) AS total_customers,
    ROUND(SUM(Revenue) / COUNT(DISTINCT Customer_id), 2) AS avg_spend_per_customer
FROM SALES
WHERE Date BETWEEN '2023-01-01' AND '2023-01-31';

-- 4. Departments with less than $600 revenue in 2022
SELECT I.Department, SUM(S.Revenue) AS total_revenue
FROM SALES S
JOIN ITEMS I ON S.Item_id = I.Item_id
WHERE S.Date BETWEEN '2022-01-01' AND '2022-12-31'
GROUP BY I.Department
HAVING SUM(S.Revenue) < 600;

-- 5. Most and least revenue generated by an order

-- Most revenue
SELECT Order_id, SUM(Revenue) AS total_revenue
FROM SALES
GROUP BY Order_id
ORDER BY total_revenue DESC
LIMIT 1;

-- Least revenue
SELECT Order_id, SUM(Revenue) AS total_revenue
FROM SALES
GROUP BY Order_id
ORDER BY total_revenue ASC
LIMIT 1;

-- 6. Items purchased in the most lucrative order
WITH RevenuePerOrder AS (
    SELECT Order_id, SUM(Revenue) AS total_revenue
    FROM SALES
    GROUP BY Order_id
    ORDER BY total_revenue DESC
    LIMIT 1
)
SELECT I.Item_name
FROM SALES S
JOIN ITEMS I ON S.Item_id = I.Item_id
WHERE S.Order_id = (SELECT Order_id FROM RevenuePerOrder);
